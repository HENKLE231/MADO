
//Config
Atributos:
  - config_lines: Lista String;
  - manga_name: String;
  - base_link: String;
  - drive_url: String;
  - phone_dir: String;
  - initial_chapter: Int;
  - final_chapter: Int;
  - img_dir: String;
  - download_dir: String;
  - files_dir: String;
  - chapters_dir: String;
  - download: Boolean;
  - transfer: Boolean;
  - final_dir: String;
  - delete_chapters: Boolean;
  - gui_initial_point: tupla de dois Int;
Funções:
  - load_configs(): void;
  - create_default_configs_file(function callback): void;
  - get_config(String config_name): String;
  - find_line(String star_with, Array de String): Int;
  - edit_config(String config_name, String value): void;
  - save_configs(): void;
  - get_configs_dict(): Dict(mudar);

//Core
Atributos:
  (mudar) ela importa todas as configurações e define nela
  - left_side: tupla de 4 Int;
  - right_side: tupla de 4 Int;
  - middle_of_left_side: tupla de 2 Int;
  - middle_of_right_side: tupla de 2 Int;
Funções: 
  - verify_outcome(Lista com instância da Queue, RootWindow, InfoWindow e se houver SeleniumManager app_instances, String error, array com dois Int coords_to_close): void;
  - download_chapters(instacia da Queue queue, instancia da RootWindow root_window, instancida da InfoWindow inof_window): void;
  - transfer(instacia da Queue queue, instancia da RootWindow root_window, instancida da InfoWindow inof_window): void;

//InternetSpeed(mudar para InternetTester)
  - get_donwload_speed(): Float;
  - get_upload_speed(): Float;
  - get_ping_speed():  Float;(mudar para get_ping_delay)


===========================================================
No arquivo main

//RootWindow(String title)
Atributos:
  - window: instancia TK;
  - title: String;
  - subprocess_id: int;
  - default_padx: int;
  - default_pady: int;
  - previous_window: String;
  - current_window: String;
  - app_windows: dict de tk.Frame;
  - widgets_with_warnings: dict de dicts com elementos tk.
  - all_config_widgets: dict com tk. (var);
Funções:
  - switch_to_window(String next_window): void;
  - update_all_fields(): void;
  - highlight_fields(Dict de Strings wrong_configs): void;
  - unhighlight(): void;

//HomeWindow(instância da RootWindow parent, instancia de Queue queue, instância da InfoWindow info_window)
Atributos:
  - window: tk.Frame;
  - var_initial_chapter = tk.StringVar;
  - var_final_chapter = tk.StringVar;
  - var_download = tk.BooleanVar;
  - var_transfer = tk.BooleanVar;
  - var_delete_chapters = tk.BooleanVar;
  - var_final_dir = tk.StringVar;
  - WIDGETS DO TK;
Funções:
  - manage_transfer_options(): void;
  - save_config_changes(): void;
  - delete_downloaded_chapters(instancia da RootWindow parent, instancia de InfoWindow info_window): void(colocar descrição);
  - verify_for_run(instancia da Queue): void;

//ConfigWindow(instancia da RootWindow)
Atributos:
  - var_manga_name: tk.StringVar;
  - var_base_link: tk.StringVar;
  - var_drive_url: tk.StringVar;
  - var_phone_dir: tk.StringVar;
  - var_pc_dir: tk.StringVar;
  - var_imgs_dir: tk.StringVar;
  - var_download_dir: tk.StringVar;
  - var_files_dir: tk.StringVar;
  - var_chapters_dir: tk.StringVar;
  - WIDGETS DO TK;
Funções:
  - select_dir(String title, tk.stringVar variable): void;
  - reset_configs(instância da RootWindow parent): void;
  - save_config_changes(): void;
  - save_and_switch_to_home(Instância da RootWindow): void;

//InfoWindow(Instância da RootWindow parent, Instância da Queue queue)
Atributos:
  - num_info_lines: int;
  - max_char_per_line: int;
  - button_action: String;
  - dynamic_button_text: String;
  - WIDGETS DO TK;
Funções:
  - interrupt_process(Instancia da Queue, instância da RootWindow parent, Array de String info_lines, String info_title): void(Só redireciona para func global);
  - execute_button_action(instância da Queue queue, instância da RootWindow parent): void;
  - set_button_action_to_go_back: void();
  - set_button_action_to_rebuild_main: void();
  - set_button_action_to_cancel: void();
  - clear_info_and_go_back(instância da RootWindow parent): void;
  - get_last_incident_index(String text, String character): int;
  - get_index_of_what_comes_last(String text, Array de string characters): int;
  - format_text(Array de String lines, int max_length): Array de Strings;
  - show_info(Array de string new_info_lines, String info_title): void;
  - update_last_lines(Array de string info_lines, int number_of_lines_to_delete): void;
  - get_info(): Array de Strings;
  - clear_info(): void;

(Funções globais)
  - set_gui_initial_point(Tupla de 2 int gui_initial_point): void(mudar nome);
  - get_gui_initial_point(): Tupla de 2 int;
  - get_current_gui_initial_point(String window_name): tupla de 2 int;
  - move_gui_to_initial_point(String window_name): void;
  - interrrupt_process(instância da Queue queue, instância da RootWindow parent, Array de string info_lines, String info_title): void;
  - create_gui(instância da Queue queue, boolean download, boolean transfer): void;
  - run(instância da Queue queue, instância da RootWindow parent, instância da InfoWindow info_window, boolean download, boolean transfer): void;
  - create_main_gui(String first_window_name, instância da Queue queue): void;
  -run_app(): void;

===========================================================

//PDFManager
Funções:
  - convert_to_pdf(String files_dir, String file): String(mudar);
  - compile_chapter(String files_dir, String files, String chapters_dir, String chapter): String(mudar);

//PendingFunctionsManager
Funções:
  - remove_pending_function(instancia da Queue queue, Array de Strings function): void;
  - get_pending_functions(instancia da Queue queue): Array String;
  - add_pending_function(instancia da Queue queue, Array de String e outros tipos);

//ScreenManager
Atributos:
  - img_dir: String;
  - pause: Float;
Funções:
  - locate(String img_name, Tupla de 4 Int region, Double confidence): Tupla de dois Int.
  - wait_for(Float time_out, Array de String img_names, String how_many, Tupla de 4 Int region, Float confidence): String;(mudar p void)
  - wait_until_become_invisible(Float time_out, Array de String img_names, String how_many,  tupla de 4 Int region, Float confidence): String(mudar p void);
  - parse_coord_to_region(Tupla de 4 int coords): Tupla de 4 int;
  - set_pause(Float pause): void;
  - move_in_explorer(String dir): void;
  - click(Tupla de 2 int, String button, Int clicks): void;
  - press_keys(Array de String keys): void;
  - open_anonimous_tab(): void;
  - select_all(): void();
  - delete(): void;
  - copy(): void;
  - paste_and_confirm(): void;
  - confirm(): void;
  - paste(): void;
  - drag(Tupla de 2 int init_coords, Tupla de 2 int final_coords): void;
  - close_window(): void;
  - close_windows_by_coords(Array de tuplas com 2 int): void;

//SeleniumManager
Atributos:
  - service: Service;
  - options: webdriver.ChromeOptions;
  - nav: webdriver.Chrome;
  - img_info: Array de tupla com 2 Strings e 1 Boolean.
Funções:
  - open_nav(String page_load_strategy, String display, Tupla de 4 Int size_and_position): void;
  - close_nav(instância de Queue queue): void;
  - open_link(String link, instância de Queue queue): String(mudar p void);
  - get_imgs_url(String manga_name, int chapter): String(mudar p void);
  - execute_script(Array de String script): void;
  - download_img(String img_name, String url): String(mudar p void);
  - get_percentage_of_downloaded_files(String download_dir) Float;

//SystemManager
Atributos:
  - point_x_zero: Int;
  - point_y_zero: Int;
  - screen_x: Int;
  - point_x_zero: Int;
  - screen_y: Int;
  - work_area_x: Int;
  - work_area_y: Int;
  - window_states: Dict de Int;
  - cwd: String;
  - user_dir: String;
Funções:
  - end_process(String target, int pid): void;
  - get_window(String window_name): Int;
  - get_window_state(int window): String;
  - set_window_state(String new_state, int window): void;
  - get_window_position(int window): tupla de 2 int;
  - set_window_position(int window tupla de 4 int size_and_position): void;
  - set_window_position_by_initial_point(int window, tupla de 2 int initial point): void;
  - get_half_screen_coords(String side): Array de 4 int;
  - get_middle_of_window(tupla de 4 int coords): tupla de 2 int;
  - wait_until_open(Float time_out, window_name): String(mudar p void);
  - get_fold_name(String path): String;
  - close_windows(Array de string windows_to_close): void;
  - get_window_name(): String;
  - open_app(String exe_name): void;
  - open_explorer(String path): void;
  - clear_dirs(Array de string): void;
  - delete_files(Strig path, Array de String patterns): void;
  - delete_config_txt(): void;
  - move_files(String current_dir, String new_dir, String pattern): void;
  - file_with_pattern_exists(String path, String pattern): boolean;
  - path_exists(String path): boolean;
  - how_many_files(String path, String pattern): int;
  - copy_files(String current_dir, String new_dir, String pattern): void;

//TimeControl(mudar p TimeManager)
Atributos:
  - start_times: Lista de double.
Funções:
  - start(): void;
  - end(): void;
  - time_is_up(double time_out): Boolean;
  - get_transfer_timeout(String transfer_type, String ou int info(mudar), String info_type, String average_size, Int tolerance_percentage): Int;
  - identify_size_and_measuring_unit(String average_size_text): Tupla com Float e String;
  - parse_to_MB(Float size, String measuring_unit): Float;